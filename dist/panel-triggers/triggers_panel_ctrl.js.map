{"version":3,"sources":["../../src/panel-triggers/triggers_panel_ctrl.js"],"names":["filterTriggers","triggers","triggerFilter","utils","isRegex","_","filter","trigger","buildRegex","test","description","$","moment","PanelCtrl","triggerPanelOptionsTab","triggerPanelTriggersTab","migratePanelSchema","CURRENT_SCHEMA_VERSION","ZABBIX_DS_ID","DEFAULT_TARGET","group","host","application","tags","DEFAULT_SEVERITY","priority","severity","color","show","DEFAULT_TIME_FORMAT","PANEL_DEFAULTS","schemaVersion","datasources","targets","hostField","hostTechNameField","hostGroups","showTags","statusField","severityField","descriptionField","descriptionAtNewLine","hostsInMaintenance","showTriggers","sortTriggersBy","text","value","showEvents","limit","fontSize","pageSize","highlightBackground","highlightNewEvents","highlightNewerThan","customLastChangeFormat","lastChangeFormat","triggerSeverity","okEventColor","ackEventColor","triggerStatusMap","TriggerPanelCtrl","$scope","$injector","$timeout","datasourceSrv","templateSrv","contextSrv","dashboardSrv","backendSrv","scope","editorTabIndex","defaultTimeFormat","pageIndex","triggerList","currentTriggersPage","panel","defaultsDeep","cloneDeep","available_datasources","map","getZabbixDataSources","length","push","isEmpty","initDatasources","events","on","onInitEditMode","bind","onRefresh","promises","ds","get","then","datasource","Promise","all","getMetricSources","meta","id","addEditorTab","timing","queryStart","Date","getTime","queryEnd","otherPanelInFullscreenMode","error","loading","setTimeQueryStart","getTriggers","setTimeQueryEnd","render","zabbixTriggers","catch","err","cancelled","console","log","message","data","emit","triggerListUnfiltered","formatTrigger","filterTriggersPost","sortTriggers","slice","getCurrentTriggersPage","allHosts","filteredMacros","macroHostIds","curDS","zabbix","groupFilter","replaceTemplateVars","hostFilter","appFilter","triggersOptions","zabbixAPI","getHosts","hosts","each","parentTemplates","templateid","getMacros","concat","macros","hostids","hostid","hostidsMacros","getAcknowledges","setMaintenanceStatus","filterTriggersPre","addTriggerDataSource","addTriggerMacro","flatten","results","eventids","lastEvent","eventid","event","find","acknowledges","formatAcknowledge","ack","timestamp","unix","clock","time","format","user","alias","name","surname","fullName","target","tagsFilter","replace","parseTags","every","tag","maintenance","maintenance_status","some","dsurl","zabbixurl","baseUrl","hostId","datasource_url","url","includes","url_macro","match","macro","toString","hostTemplate","hostMacro","orderBy","zabbixTrigger","triggerObj","hostTechName","comments","lastchangeUnix","Number","lastchange","setTriggerLastChange","setTriggerSeverity","markAckEvents","age","fromNow","tagStr","split","trim","tagParts","join","tagFilter","targetTags","newTag","uniqWith","isEqual","newFilter","tagsToString","refresh","showComment","grafana_user","ack_message","userIsEditor","isEditor","isGrafanaAdmin","disableReadOnlyUsersAck","reject","acknowledgeEvent","startPos","endPos","Math","min","groupNames","groups","iconClass","isNewTrigger","statusClass","mainColor","secondColor","lightTheme","highlightIntervalMs","parseInterval","durationSec","now","e","elem","attrs","ctrl","pageCount","$watchGroup","renderPanel","switchPage","renderData","getContentHeight","panelHeight","height","el","currentTarget","parseInt","$apply","appendPaginationControls","footerElem","empty","ceil","startPage","max","endPage","paginationList","i","activeClass","pageLinkElem","append","setFontSize","triggerCardElem","css","rootElem","renderingCompleted","unbindDestroy","$on","off","templateUrl"],"mappings":"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","file":"triggers_panel_ctrl.js","sourcesContent":["import _ from 'lodash';\r\nimport $ from 'jquery';\r\nimport moment from 'moment';\r\nimport * as utils from '../datasource-zabbix/utils';\r\nimport {PanelCtrl} from 'app/plugins/sdk';\r\nimport {triggerPanelOptionsTab} from './options_tab';\r\nimport {triggerPanelTriggersTab} from './triggers_tab';\r\nimport {migratePanelSchema, CURRENT_SCHEMA_VERSION} from './migrations';\r\n\r\nconst ZABBIX_DS_ID = 'alexanderzobnin-zabbix-datasource';\r\n\r\nexport const DEFAULT_TARGET = {\r\n  group: {filter: \"\"},\r\n  host: {filter: \"\"},\r\n  application: {filter: \"\"},\r\n  trigger: {filter: \"\"},\r\n  tags: {filter: \"\"},\r\n};\r\n\r\nexport const DEFAULT_SEVERITY = [\r\n  {priority: 0, severity: 'Not classified', color: 'rgb(108, 108, 108)', show: true},\r\n  {priority: 1, severity: 'Information', color: 'rgb(120, 158, 183)', show: true},\r\n  {priority: 2, severity: 'Warning', color: 'rgb(175, 180, 36)', show: true},\r\n  {priority: 3, severity: 'Average', color: 'rgb(255, 137, 30)', show: true},\r\n  {priority: 4, severity: 'High', color: 'rgb(255, 101, 72)', show: true},\r\n  {priority: 5, severity: 'Disaster', color: 'rgb(215, 0, 0)', show: true},\r\n];\r\n\r\nconst DEFAULT_TIME_FORMAT = \"DD MMM YYYY HH:mm:ss\";\r\n\r\nexport const PANEL_DEFAULTS = {\r\n  schemaVersion: CURRENT_SCHEMA_VERSION,\r\n  datasources: [],\r\n  targets: {},\r\n  // Fields\r\n  hostField: true,\r\n  hostTechNameField: false,\r\n  hostGroups: false,\r\n  showTags: true,\r\n  statusField: true,\r\n  severityField: true,\r\n  descriptionField: true,\r\n  descriptionAtNewLine: false,\r\n  // Options\r\n  hostsInMaintenance: true,\r\n  showTriggers: 'all triggers',\r\n  sortTriggersBy: {text: 'last change', value: 'lastchange'},\r\n  showEvents: {text: 'Problems', value: '1'},\r\n  limit: 100,\r\n  // View options\r\n  fontSize: '100%',\r\n  pageSize: 10,\r\n  highlightBackground: false,\r\n  highlightNewEvents: false,\r\n  highlightNewerThan: '1h',\r\n  customLastChangeFormat: false,\r\n  lastChangeFormat: \"\",\r\n  // Triggers severity and colors\r\n  triggerSeverity: DEFAULT_SEVERITY,\r\n  okEventColor: 'rgb(56, 189, 113)',\r\n  ackEventColor: 'rgb(56, 219, 156)'\r\n};\r\n\r\nconst triggerStatusMap = {\r\n  '0': 'OK',\r\n  '1': 'PROBLEM'\r\n};\r\n\r\nexport class TriggerPanelCtrl extends PanelCtrl {\r\n\r\n  /** @ngInject */\r\n  constructor($scope, $injector, $timeout, datasourceSrv, templateSrv, contextSrv, dashboardSrv, backendSrv) {\r\n    super($scope, $injector);\r\n    this.datasourceSrv = datasourceSrv;\r\n    this.templateSrv = templateSrv;\r\n    this.contextSrv = contextSrv;\r\n    this.dashboardSrv = dashboardSrv;\r\n    this.backendSrv = backendSrv;\r\n    this.scope = $scope;\r\n    this.$timeout = $timeout;\r\n\r\n    this.editorTabIndex = 1;\r\n    this.triggerStatusMap = triggerStatusMap;\r\n    this.defaultTimeFormat = DEFAULT_TIME_FORMAT;\r\n    this.pageIndex = 0;\r\n    this.triggerList = [];\r\n    this.currentTriggersPage = [];\r\n    this.datasources = {};\r\n\r\n    this.panel = migratePanelSchema(this.panel);\r\n    _.defaultsDeep(this.panel, _.cloneDeep(PANEL_DEFAULTS));\r\n\r\n    this.available_datasources = _.map(this.getZabbixDataSources(), 'name');\r\n    if (this.panel.datasources.length === 0) {\r\n      this.panel.datasources.push(this.available_datasources[0]);\r\n    }\r\n    if (_.isEmpty(this.panel.targets)) {\r\n      this.panel.targets[this.panel.datasources[0]] = DEFAULT_TARGET;\r\n    }\r\n\r\n    this.initDatasources();\r\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\r\n    this.events.on('refresh', this.onRefresh.bind(this));\r\n  }\r\n\r\n  initDatasources() {\r\n    let promises = _.map(this.panel.datasources, (ds) => {\r\n      // Load datasource\r\n      return this.datasourceSrv.get(ds)\r\n          .then(datasource => {\r\n            this.datasources[ds] = datasource;\r\n            return datasource;\r\n          });\r\n    });\r\n    return Promise.all(promises);\r\n  }\r\n\r\n  getZabbixDataSources() {\r\n    return _.filter(this.datasourceSrv.getMetricSources(), datasource => {\r\n      return datasource.meta.id === ZABBIX_DS_ID && datasource.value;\r\n    });\r\n  }\r\n\r\n  onInitEditMode() {\r\n    this.addEditorTab('Triggers', triggerPanelTriggersTab, 1);\r\n    this.addEditorTab('Options', triggerPanelOptionsTab, 2);\r\n  }\r\n\r\n  setTimeQueryStart() {\r\n    this.timing.queryStart = new Date().getTime();\r\n  }\r\n\r\n  setTimeQueryEnd() {\r\n    this.timing.queryEnd = new Date().getTime();\r\n  }\r\n\r\n  onRefresh() {\r\n    // ignore fetching data if another panel is in fullscreen\r\n    if (this.otherPanelInFullscreenMode()) {\r\n      return;\r\n    }\r\n\r\n    // clear loading/error state\r\n    delete this.error;\r\n    this.loading = true;\r\n    this.setTimeQueryStart();\r\n    this.pageIndex = 0;\r\n\r\n    return this.getTriggers()\r\n        .then(zabbixTriggers => {\r\n          // Notify panel that request is finished\r\n          this.loading = false;\r\n          this.setTimeQueryEnd();\r\n\r\n          this.render(zabbixTriggers);\r\n        })\r\n        .catch(err => {\r\n          // if cancelled  keep loading set to true\r\n          if (err.cancelled) {\r\n            console.log('Panel request cancelled', err);\r\n            return;\r\n          }\r\n\r\n          this.loading = false;\r\n          this.error = err.message || \"Request Error\";\r\n\r\n          if (err.data) {\r\n            if (err.data.message) {\r\n              this.error = err.data.message;\r\n            }\r\n            if (err.data.error) {\r\n              this.error = err.data.error;\r\n            }\r\n          }\r\n\r\n          this.events.emit('data-error', err);\r\n          console.log('Panel data error:', err);\r\n        });\r\n  }\r\n\r\n  render(zabbixTriggers) {\r\n    let triggers = _.cloneDeep(zabbixTriggers || this.triggerListUnfiltered);\r\n    this.triggerListUnfiltered = _.cloneDeep(triggers);\r\n\r\n    triggers = _.map(triggers, this.formatTrigger.bind(this));\r\n    triggers = this.filterTriggersPost(triggers);\r\n    triggers = this.sortTriggers(triggers);\r\n\r\n    // Limit triggers number\r\n    triggers = triggers.slice(0, this.panel.limit || PANEL_DEFAULTS.limit);\r\n\r\n    this.triggerList = triggers;\r\n    this.getCurrentTriggersPage();\r\n\r\n    this.$timeout(() => {\r\n      super.render(this.triggerList);\r\n    });\r\n  }\r\n\r\n  getTriggers() {\r\n    let allHosts = [];\r\n    let filteredMacros = [];\r\n    let macroHostIds = [];\r\n    let curDS = null;\r\n    let promises = _.map(this.panel.datasources, (ds) => {\r\n      return this.datasourceSrv.get(ds)\r\n          .then(datasource => {\r\n            var zabbix = datasource.zabbix;\r\n            var showEvents = this.panel.showEvents.value;\r\n            var triggerFilter = this.panel.targets[ds];\r\n\r\n            // Replace template variables\r\n            var groupFilter = datasource.replaceTemplateVars(triggerFilter.group.filter);\r\n            var hostFilter = datasource.replaceTemplateVars(triggerFilter.host.filter);\r\n            var appFilter = datasource.replaceTemplateVars(triggerFilter.application.filter);\r\n\r\n            let triggersOptions = {\r\n              showTriggers: showEvents\r\n            };\r\n\r\n            curDS = datasource;\r\n            datasource.zabbix.zabbixAPI.getHosts().then(hosts => {\r\n              allHosts = hosts;\r\n              _.each(hosts, function (host) {\r\n                if (host.parentTemplates[0]){\r\n                  macroHostIds.push(host.parentTemplates[0].templateid);\r\n                }\r\n              });\r\n              return macroHostIds;\r\n            }).then(macroHostIds => {\r\n              curDS.zabbix.getMacros(macroHostIds).then(macros => {\r\n                filteredMacros = filteredMacros.concat(macros);\r\n                return macros;\r\n              });\r\n            });\r\n\r\n            return zabbix.getTriggers(groupFilter, hostFilter, appFilter, triggersOptions);\r\n          }).then(triggers => {\r\n            let hostids = _.map(triggers, function (trigger) {\r\n              if (trigger.hosts){\r\n                return trigger.hosts[0].hostid;\r\n              }\r\n            });\r\n            let hostidsMacros = curDS.zabbix.getMacros(hostids).then(macros => {\r\n              filteredMacros = filteredMacros.concat(macros);\r\n              return triggers;\r\n            });\r\n            return hostidsMacros;\r\n          }).then((triggers) => {\r\n            return this.getAcknowledges(triggers, ds);\r\n          }).then((triggers) => {\r\n            return this.setMaintenanceStatus(triggers);\r\n          }).then((triggers) => {\r\n            return this.filterTriggersPre(triggers, ds);\r\n          }).then((triggers) => {\r\n            return this.addTriggerDataSource(triggers, ds);\r\n          }).then(triggers => {\r\n            return this.addTriggerMacro(triggers, filteredMacros, allHosts);\r\n          });\r\n    });\r\n\r\n    return Promise.all(promises)\r\n        .then(results => _.flatten(results));\r\n  }\r\n\r\n  getAcknowledges(triggerList, ds) {\r\n    // Request acknowledges for trigger\r\n    var eventids = _.map(triggerList, trigger => {\r\n      return trigger.lastEvent.eventid;\r\n    });\r\n\r\n    return this.datasources[ds].zabbix.getAcknowledges(eventids)\r\n        .then(events => {\r\n\r\n          // Map events to triggers\r\n          _.each(triggerList, trigger => {\r\n            var event = _.find(events, event => {\r\n              return event.eventid === trigger.lastEvent.eventid;\r\n            });\r\n\r\n            if (event) {\r\n              trigger.acknowledges = _.map(event.acknowledges, this.formatAcknowledge.bind(this));\r\n            }\r\n\r\n            if (!trigger.lastEvent.eventid) {\r\n              trigger.lastEvent = null;\r\n            }\r\n          });\r\n\r\n          return triggerList;\r\n        });\r\n  }\r\n\r\n  formatAcknowledge(ack) {\r\n    let timestamp = moment.unix(ack.clock);\r\n    if (this.panel.customLastChangeFormat) {\r\n      ack.time = timestamp.format(this.panel.lastChangeFormat);\r\n    } else {\r\n      ack.time = timestamp.format(this.defaultTimeFormat);\r\n    }\r\n    ack.user = ack.alias || '';\r\n    if (ack.name || ack.surname) {\r\n      const fullName = `${ack.name || ''} ${ack.surname || ''}`;\r\n      ack.user += ` (${fullName})`;\r\n    }\r\n    return ack;\r\n  }\r\n\r\n  filterTriggersPre(triggerList, ds) {\r\n    // Filter triggers by description\r\n    let triggerFilter = this.panel.targets[ds].trigger.filter;\r\n    triggerFilter = this.datasources[ds].replaceTemplateVars(triggerFilter);\r\n    if (triggerFilter) {\r\n      triggerList = filterTriggers(triggerList, triggerFilter);\r\n    }\r\n\r\n    // Filter by tags\r\n    const target = this.panel.targets[ds];\r\n    if (target.tags.filter) {\r\n      let tagsFilter = this.datasources[ds].replaceTemplateVars(target.tags.filter);\r\n      // replaceTemplateVars() builds regex-like string, so we should trim it.\r\n      tagsFilter = tagsFilter.replace('/^', '').replace('$/', '');\r\n      const tags = this.parseTags(tagsFilter);\r\n      triggerList = _.filter(triggerList, trigger => {\r\n        return _.every(tags, (tag) => {\r\n          return _.find(trigger.tags, {tag: tag.tag, value: tag.value});\r\n        });\r\n      });\r\n    }\r\n\r\n    return triggerList;\r\n  }\r\n\r\n  filterTriggersPost(triggers) {\r\n    let triggerList = _.cloneDeep(triggers);\r\n\r\n    // Filter acknowledged triggers\r\n    if (this.panel.showTriggers === 'unacknowledged') {\r\n      triggerList = _.filter(triggerList, trigger => {\r\n        return !trigger.acknowledges;\r\n      });\r\n    } else if (this.panel.showTriggers === 'acknowledged') {\r\n      triggerList = _.filter(triggerList, 'acknowledges');\r\n    } else {\r\n      triggerList = triggerList;\r\n    }\r\n\r\n    // Filter by maintenance status\r\n    if (!this.panel.hostsInMaintenance) {\r\n      triggerList = _.filter(triggerList, (trigger) => trigger.maintenance === false);\r\n    }\r\n\r\n    // Filter triggers by severity\r\n    triggerList = _.filter(triggerList, trigger => {\r\n      return this.panel.triggerSeverity[trigger.priority].show;\r\n    });\r\n\r\n    return triggerList;\r\n  }\r\n\r\n  setMaintenanceStatus(triggers) {\r\n    _.each(triggers, (trigger) => {\r\n      let maintenance_status = _.some(trigger.hosts, (host) => host.maintenance_status === '1');\r\n      trigger.maintenance = maintenance_status;\r\n    });\r\n    return triggers;\r\n  }\r\n\r\n  addTriggerDataSource(triggers, ds) {\r\n    var dsurl = this.panel.targets[ds].zabbixurl;\r\n    var baseUrl;\r\n    if (!dsurl) {\r\n      baseUrl = null;\r\n    }\r\n    else {\r\n      baseUrl = dsurl.filter;\r\n    }\r\n\r\n    _.each(triggers, (trigger) => {\r\n      trigger.datasource = ds;\r\n      if (baseUrl) {\r\n        if (trigger.hosts) {\r\n          let hostId = trigger.hosts[0].hostid;\r\n          trigger.datasource_url = baseUrl + 'hostinventories.php?hostid=' + hostId;\r\n        }\r\n        else {\r\n          trigger.datasource_url = baseUrl;\r\n        }\r\n      } else {\r\n        trigger.datasource_url = null;\r\n      }\r\n    });\r\n    return triggers;\r\n  }\r\n\r\n  addTriggerMacro(triggers, filteredMacros, allHosts) {\r\n    _.each(triggers, function (trigger) {\r\n      if (trigger.url && _.includes(trigger.url, \"{$\")){\r\n        let url_macro = trigger.url.match(/{\\$\\w+}/)[0];\r\n        let macro = _.find(filteredMacros, {macro: url_macro, hostid: trigger.hosts[0].hostid.toString()});\r\n        if (macro){\r\n          trigger.url = _.replace(trigger.url, url_macro, macro.value);\r\n        }\r\n        else {\r\n          let hostTemplate = _.find(allHosts, {hostid: trigger.hosts[0].hostid.toString()});\r\n          if(hostTemplate) {\r\n            let hostMacro = _.find(filteredMacros, {macro: url_macro, hostid: hostTemplate.parentTemplates[0].templateid.toString()});\r\n            if(hostMacro){\r\n              trigger.url = _.replace(trigger.url, url_macro, hostMacro.value);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    });\r\n    return triggers;\r\n  }\r\n\r\n  sortTriggers(triggerList) {\r\n    if (this.panel.sortTriggersBy.value === 'priority') {\r\n      triggerList = _.orderBy(triggerList, ['priority', 'lastchangeUnix', 'triggerid'], ['desc', 'desc', 'desc']);\r\n    } else {\r\n      triggerList = _.orderBy(triggerList, ['lastchangeUnix', 'priority', 'triggerid'], ['desc', 'desc', 'desc']);\r\n    }\r\n    return triggerList;\r\n  }\r\n\r\n  formatTrigger(zabbixTrigger) {\r\n    let trigger = _.cloneDeep(zabbixTrigger);\r\n    let triggerObj = trigger;\r\n\r\n    // Set host that the trigger belongs\r\n    if (trigger.hosts && trigger.hosts.length) {\r\n      triggerObj.host = trigger.hosts[0].name;\r\n      triggerObj.hostTechName = trigger.hosts[0].host;\r\n    }\r\n\r\n    // Set tags if present\r\n    if (trigger.tags && trigger.tags.length === 0) {\r\n      trigger.tags = null;\r\n    }\r\n\r\n    // Handle multi-line description\r\n    if (trigger.comments) {\r\n      trigger.comments = trigger.comments.replace('\\n', '<br>');\r\n    }\r\n\r\n    // Format last change and age\r\n    trigger.lastchangeUnix = Number(trigger.lastchange);\r\n    triggerObj = this.setTriggerLastChange(triggerObj);\r\n    triggerObj = this.setTriggerSeverity(triggerObj);\r\n    return triggerObj;\r\n  }\r\n\r\n  updateTriggerFormat(trigger) {\r\n    trigger = this.setTriggerLastChange(trigger);\r\n    trigger = this.setTriggerSeverity(trigger);\r\n    return trigger;\r\n  }\r\n\r\n  setTriggerSeverity(trigger) {\r\n    if (trigger.value === '1') {\r\n      // Problem state\r\n      trigger.color = this.panel.triggerSeverity[trigger.priority].color;\r\n    } else {\r\n      // OK state\r\n      trigger.color = this.panel.okEventColor;\r\n    }\r\n    trigger.severity = this.panel.triggerSeverity[trigger.priority].severity;\r\n\r\n    // Mark acknowledged triggers with different color\r\n    if (this.panel.markAckEvents && trigger.acknowledges && trigger.acknowledges.length) {\r\n      trigger.color = this.panel.ackEventColor;\r\n    }\r\n\r\n    return trigger;\r\n  }\r\n\r\n  setTriggerLastChange(trigger) {\r\n    if (!trigger.lastchangeUnix) {\r\n      trigger.lastchange = \"\";\r\n      trigger.age = \"\";\r\n      return trigger;\r\n    }\r\n\r\n    let timestamp = moment.unix(trigger.lastchangeUnix);\r\n    if (this.panel.customLastChangeFormat) {\r\n      // User defined format\r\n      trigger.lastchange = timestamp.format(this.panel.lastChangeFormat);\r\n    } else {\r\n      trigger.lastchange = timestamp.format(this.defaultTimeFormat);\r\n    }\r\n    trigger.age = timestamp.fromNow(true);\r\n    return trigger;\r\n  }\r\n\r\n  parseTags(tagStr) {\r\n    if (!tagStr) {\r\n      return [];\r\n    }\r\n\r\n    let tags = _.map(tagStr.split(','), (tag) => tag.trim());\r\n    tags = _.map(tags, (tag) => {\r\n      const tagParts = tag.split(':');\r\n      return {tag: tagParts[0].trim(), value: tagParts[1].trim()};\r\n    });\r\n    return tags;\r\n  }\r\n\r\n  tagsToString(tags) {\r\n    return _.map(tags, (tag) => `${tag.tag}:${tag.value}`).join(', ');\r\n  }\r\n\r\n  addTagFilter(tag, ds) {\r\n    let tagFilter = this.panel.targets[ds].tags.filter;\r\n    let targetTags = this.parseTags(tagFilter);\r\n    let newTag = {tag: tag.tag, value: tag.value};\r\n    targetTags.push(newTag);\r\n    targetTags = _.uniqWith(targetTags, _.isEqual);\r\n    let newFilter = this.tagsToString(targetTags);\r\n    this.panel.targets[ds].tags.filter = newFilter;\r\n    this.refresh();\r\n  }\r\n\r\n  switchComment(trigger) {\r\n    trigger.showComment = !trigger.showComment;\r\n  }\r\n\r\n  acknowledgeTrigger(trigger, message) {\r\n    let eventid = trigger.lastEvent ? trigger.lastEvent.eventid : null;\r\n    let grafana_user = this.contextSrv.user.name;\r\n    let ack_message = grafana_user + ' (Grafana): ' + message;\r\n    return this.datasourceSrv.get(trigger.datasource)\r\n        .then(datasource => {\r\n          const userIsEditor = this.contextSrv.isEditor || this.contextSrv.isGrafanaAdmin;\r\n          if (datasource.disableReadOnlyUsersAck && !userIsEditor) {\r\n            return Promise.reject({message: 'You have no permissions to acknowledge events.'});\r\n          }\r\n          if (eventid) {\r\n            return datasource.zabbix.zabbixAPI.acknowledgeEvent(eventid, ack_message);\r\n          } else {\r\n            return Promise.reject({message: 'Trigger has no events. Nothing to acknowledge.'});\r\n          }\r\n        })\r\n        .then(this.onRefresh.bind(this))\r\n        .catch((err) => {\r\n          this.error = err.message || \"Acknowledge Error\";\r\n          this.events.emit('data-error', err);\r\n          console.log('Panel data error:', err);\r\n        });\r\n  }\r\n\r\n  getCurrentTriggersPage() {\r\n    let pageSize = this.panel.pageSize || PANEL_DEFAULTS.pageSize;\r\n    let startPos = this.pageIndex * pageSize;\r\n    let endPos = Math.min(startPos + pageSize, this.triggerList.length);\r\n    this.currentTriggersPage = this.triggerList.slice(startPos, endPos);\r\n    return this.currentTriggersPage;\r\n  }\r\n\r\n  formatHostName(trigger) {\r\n    let host = \"\";\r\n    if (this.panel.hostField && this.panel.hostTechNameField) {\r\n      host = `${trigger.host} (${trigger.hostTechName})`;\r\n    } else if (this.panel.hostField || this.panel.hostTechNameField) {\r\n      host = this.panel.hostField ? trigger.host : trigger.hostTechName;\r\n    }\r\n\r\n    return host;\r\n  }\r\n\r\n  formatHostGroups(trigger) {\r\n    let groupNames = \"\";\r\n    if (this.panel.hostGroups) {\r\n      let groups = _.map(trigger.groups, 'name').join(', ');\r\n      groupNames += `[ ${groups} ]`;\r\n    }\r\n\r\n    return groupNames;\r\n  }\r\n\r\n  getAlertIconClass(trigger) {\r\n    let iconClass = '';\r\n    if (trigger.value === '1') {\r\n      if (trigger.priority >= 3) {\r\n        iconClass = 'icon-gf-critical';\r\n      } else {\r\n        iconClass = 'icon-gf-warning';\r\n      }\r\n    } else {\r\n      iconClass = 'icon-gf-online';\r\n    }\r\n\r\n    if (this.panel.highlightNewEvents && this.isNewTrigger(trigger)) {\r\n      iconClass += ' zabbix-trigger--blinked';\r\n    }\r\n    return iconClass;\r\n  }\r\n\r\n  getAlertIconClassBySeverity(triggerSeverity) {\r\n    let iconClass = 'icon-gf-warning';\r\n    if (triggerSeverity.priority >= 3) {\r\n      iconClass = 'icon-gf-critical';\r\n    }\r\n    return iconClass;\r\n  }\r\n\r\n  getAlertStateClass(trigger) {\r\n    let statusClass = '';\r\n\r\n    if (trigger.value === '1') {\r\n      statusClass = 'alert-state-critical';\r\n    } else {\r\n      statusClass = 'alert-state-ok';\r\n    }\r\n\r\n    if (this.panel.highlightNewEvents && this.isNewTrigger(trigger)) {\r\n      statusClass += ' zabbix-trigger--blinked';\r\n    }\r\n\r\n    return statusClass;\r\n  }\r\n\r\n  getBackground(trigger) {\r\n    const mainColor = trigger.color;\r\n    const secondColor = this.contextSrv.user.lightTheme ? '#dde4ed' : '#262628';\r\n    if (this.contextSrv.user.lightTheme) {\r\n      return `linear-gradient(135deg, ${secondColor}, ${mainColor})`;\r\n    }\r\n    return `linear-gradient(135deg, ${mainColor}, ${secondColor})`;\r\n  }\r\n\r\n  isNewTrigger(trigger) {\r\n    try {\r\n      const highlightIntervalMs = utils.parseInterval(this.panel.highlightNewerThan || PANEL_DEFAULTS.highlightNewerThan);\r\n      const durationSec = (Date.now() - trigger.lastchangeUnix * 1000);\r\n      return durationSec < highlightIntervalMs;\r\n    } catch (e) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  link(scope, elem, attrs, ctrl) {\r\n    let panel = ctrl.panel;\r\n    let pageCount = 0;\r\n    let triggerList = ctrl.triggerList;\r\n\r\n    scope.$watchGroup(['ctrl.currentTriggersPage', 'ctrl.triggerList'], renderPanel);\r\n    elem.on('click', '.triggers-panel-page-link', switchPage);\r\n    ctrl.events.on('render', (renderData) => {\r\n      triggerList = renderData || triggerList;\r\n      renderPanel();\r\n    });\r\n\r\n    function getContentHeight() {\r\n      let panelHeight = ctrl.height;\r\n      if (pageCount > 1) {\r\n        panelHeight -= 36;\r\n      }\r\n      return panelHeight + 'px';\r\n    }\r\n\r\n    function switchPage(e) {\r\n      let el = $(e.currentTarget);\r\n      ctrl.pageIndex = (parseInt(el.text(), 10) - 1);\r\n\r\n      let pageSize = panel.pageSize || 10;\r\n      let startPos = ctrl.pageIndex * pageSize;\r\n      let endPos = Math.min(startPos + pageSize, triggerList.length);\r\n      ctrl.currentTriggersPage = triggerList.slice(startPos, endPos);\r\n\r\n      scope.$apply(() => {\r\n        renderPanel();\r\n      });\r\n    }\r\n\r\n    function appendPaginationControls(footerElem) {\r\n      footerElem.empty();\r\n\r\n      let pageSize = panel.pageSize || 5;\r\n      pageCount = Math.ceil(triggerList.length / pageSize);\r\n      if (pageCount === 1) {\r\n        return;\r\n      }\r\n\r\n      let startPage = Math.max(ctrl.pageIndex - 3, 0);\r\n      let endPage = Math.min(pageCount, startPage + 9);\r\n\r\n      let paginationList = $('<ul></ul>');\r\n\r\n      for (let i = startPage; i < endPage; i++) {\r\n        let activeClass = i === ctrl.pageIndex ? 'active' : '';\r\n        let pageLinkElem = $('<li><a class=\"triggers-panel-page-link pointer ' + activeClass + '\">' + (i + 1) + '</a></li>');\r\n        paginationList.append(pageLinkElem);\r\n      }\r\n\r\n      footerElem.append(paginationList);\r\n    }\r\n\r\n    function setFontSize() {\r\n      const fontSize = parseInt(panel.fontSize.slice(0, panel.fontSize.length - 1));\r\n      let triggerCardElem = elem.find('.alert-rule-item');\r\n      if (fontSize && fontSize !== 100) {\r\n        triggerCardElem.find('.alert-rule-item__icon').css({\r\n          'font-size': fontSize + '%',\r\n          'margin': fontSize / 100 * 6 + 'px'\r\n        });\r\n        triggerCardElem.find('.alert-rule-item__name').css({'font-size': fontSize + '%'});\r\n        triggerCardElem.find('.alert-rule-item__text').css({'font-size': fontSize * 0.8 + '%'});\r\n        triggerCardElem.find('.zbx-trigger-lastchange').css({'font-size': fontSize * 0.8 + '%'});\r\n        triggerCardElem.find('.zbx-tag').css({'font-size': fontSize * 0.6 + '%'});\r\n        triggerCardElem.find('.zbx-tag').css({'line-height': fontSize / 100 * 16 + 'px'});\r\n      } else {\r\n        // remove css\r\n        triggerCardElem.find('.alert-rule-item__icon').css({'font-size': '', 'margin-right': ''});\r\n        triggerCardElem.find('.alert-rule-item__name').css({'font-size': ''});\r\n        triggerCardElem.find('.alert-rule-item__text').css({'font-size': ''});\r\n        triggerCardElem.find('.zbx-trigger-lastchange').css({'font-size': ''});\r\n        triggerCardElem.find('.zbx-tag').css({'font-size': ''});\r\n        triggerCardElem.find('.zbx-tag').css({'line-height': ''});\r\n      }\r\n    }\r\n\r\n    function renderPanel() {\r\n      let rootElem = elem.find('.triggers-panel-scroll');\r\n      let footerElem = elem.find('.triggers-panel-footer');\r\n      appendPaginationControls(footerElem);\r\n      rootElem.css({'max-height': getContentHeight()});\r\n      rootElem.css({'height': getContentHeight()});\r\n      setFontSize();\r\n      ctrl.renderingCompleted();\r\n    }\r\n\r\n    let unbindDestroy = scope.$on('$destroy', function () {\r\n      elem.off('click', '.triggers-panel-page-link');\r\n      unbindDestroy();\r\n    });\r\n  }\r\n}\r\n\r\nTriggerPanelCtrl.templateUrl = 'public/plugins/alexanderzobnin-zabbix-app/panel-triggers/partials/module.html';\r\n\r\nfunction filterTriggers(triggers, triggerFilter) {\r\n  if (utils.isRegex(triggerFilter)) {\r\n    return _.filter(triggers, function (trigger) {\r\n      return utils.buildRegex(triggerFilter).test(trigger.description);\r\n    });\r\n  } else {\r\n    return _.filter(triggers, function (trigger) {\r\n      return trigger.description === triggerFilter;\r\n    });\r\n  }\r\n}\r\n"]}
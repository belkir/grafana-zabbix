{"version":3,"sources":["../../src/datasource-zabbix/zabbix.js"],"names":["ZabbixFactory","zabbixAPIService","ZabbixCachingProxy","ZabbixDBConnector","Zabbix","url","options","username","password","basicAuth","withCredentials","cacheTTL","enableDirectDBConnection","sqlDatasourceId","ZabbixAPI","zabbixAPI","dbConnector","cacheOptions","enabled","ttl","cachingProxy","getHistory","bind","getMacros","getItemsByIDs","getHistoryDB","getTrendsDB","getTrend","getEvents","getAlerts","getHostAlerts","getAcknowledges","getITService","getSLA","getVersion","login","target","parts","filters","_","map","p","filter","getItems","Promise","all","getHosts","getApps","then","results","hosts","apps","appFilterEmpty","getGroups","groupFilter","getAllGroups","length","findByGroupFilter","groups","findByFilter","groupids","hostFilter","getAllHosts","hostids","appFilter","filterByQuery","undefined","itemtype","appids","showDisabledItems","items","expandUserMacro","getHostIds","forEach","utils","containsMacro","item","name","replaceMacro","macros","itemFilter","getAllItems","itServiceFilter","getITServices","itServices","promises","filteredGroups","filteredHosts","filteredApps","query","applicationids","flatten","getTriggers","findByName","list","finded","find","filterByName","filterByRegex","regex","filterPattern","buildRegex","zbx_obj","test","isRegex","filter_list","group","indexOf","hostIds","uniq","angular","module","factory"],"mappings":"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","file":"zabbix.js","sourcesContent":["import angular from 'angular';\r\nimport _ from 'lodash';\r\nimport * as utils from './utils';\r\nimport './zabbixAPI.service.js';\r\nimport './zabbixCachingProxy.service.js';\r\nimport './zabbixDBConnector';\r\n\r\n// Use factory() instead service() for multiple data sources support.\r\n// Each Zabbix data source instance should initialize its own API instance.\r\n\r\n/** @ngInject */\r\nfunction ZabbixFactory(zabbixAPIService, ZabbixCachingProxy, ZabbixDBConnector) {\r\n\r\n  class Zabbix {\r\n    constructor(url, options) {\r\n      let {\r\n        username, password, basicAuth, withCredentials, cacheTTL,\r\n        enableDirectDBConnection, sqlDatasourceId\r\n      } = options;\r\n\r\n      // Initialize Zabbix API\r\n      var ZabbixAPI = zabbixAPIService;\r\n      this.zabbixAPI = new ZabbixAPI(url, username, password, basicAuth, withCredentials);\r\n\r\n      if (enableDirectDBConnection) {\r\n        this.dbConnector = new ZabbixDBConnector(sqlDatasourceId);\r\n      }\r\n\r\n      // Initialize caching proxy for requests\r\n      let cacheOptions = {\r\n        enabled: true,\r\n        ttl: cacheTTL\r\n      };\r\n      this.cachingProxy = new ZabbixCachingProxy(this.zabbixAPI, this.dbConnector, cacheOptions);\r\n\r\n      // Proxy methods\r\n      this.getHistory = this.cachingProxy.getHistory.bind(this.cachingProxy);\r\n      this.getMacros = this.cachingProxy.getMacros.bind(this.cachingProxy);\r\n      this.getItemsByIDs = this.cachingProxy.getItemsByIDs.bind(this.cachingProxy);\r\n\r\n      if (enableDirectDBConnection) {\r\n        this.getHistoryDB = this.cachingProxy.getHistoryDB.bind(this.cachingProxy);\r\n        this.getTrendsDB = this.cachingProxy.getTrendsDB.bind(this.cachingProxy);\r\n      }\r\n\r\n      this.getTrend = this.zabbixAPI.getTrend.bind(this.zabbixAPI);\r\n      this.getEvents = this.zabbixAPI.getEvents.bind(this.zabbixAPI);\r\n      this.getAlerts = this.zabbixAPI.getAlerts.bind(this.zabbixAPI);\r\n      this.getHostAlerts = this.zabbixAPI.getHostAlerts.bind(this.zabbixAPI);\r\n      this.getAcknowledges = this.zabbixAPI.getAcknowledges.bind(this.zabbixAPI);\r\n      this.getITService = this.zabbixAPI.getITService.bind(this.zabbixAPI);\r\n      this.getSLA = this.zabbixAPI.getSLA.bind(this.zabbixAPI);\r\n      this.getVersion = this.zabbixAPI.getVersion.bind(this.zabbixAPI);\r\n      this.login = this.zabbixAPI.login.bind(this.zabbixAPI);\r\n    }\r\n\r\n    getItemsFromTarget(target, options) {\r\n      let parts = ['group', 'host', 'application', 'item'];\r\n      let filters = _.map(parts, p => target[p].filter);\r\n      return this.getItems(...filters, options);\r\n    }\r\n\r\n    getHostsFromTarget(target) {\r\n      let parts = ['group', 'host', 'application'];\r\n      let filters = _.map(parts, p => target[p].filter);\r\n      return Promise.all([\r\n        this.getHosts(...filters),\r\n        this.getApps(...filters),\r\n      ]).then((results) => {\r\n        let [hosts, apps] = results;\r\n        if (apps.appFilterEmpty) {\r\n          apps = [];\r\n        }\r\n        return [hosts, apps];\r\n      });\r\n    }\r\n\r\n    getAllGroups() {\r\n      return this.cachingProxy.getGroups();\r\n    }\r\n\r\n    getGroups(groupFilter) {\r\n      return this.getAllGroups()\r\n      .then(groups => {\r\n        if (groupFilter.length > 1) {\r\n          return findByGroupFilter(groups, groupFilter);\r\n        }\r\n        else {\r\n          return findByFilter(groups, groupFilter);\r\n        }\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Get list of host belonging to given groups.\r\n     */\r\n    getAllHosts(groupFilter) {\r\n      return this.getGroups(groupFilter)\r\n      .then(groups => {\r\n        let groupids = _.map(groups, 'groupid');\r\n        return this.cachingProxy.getHosts(groupids);\r\n      });\r\n    }\r\n\r\n    getHosts(groupFilter, hostFilter) {\r\n      return this.getAllHosts(groupFilter)\r\n      .then(hosts => findByFilter(hosts, hostFilter));\r\n    }\r\n\r\n    /**\r\n     * Get list of applications belonging to given groups and hosts.\r\n     */\r\n    getAllApps(groupFilter, hostFilter) {\r\n      return this.getHosts(groupFilter, hostFilter)\r\n      .then(hosts => {\r\n        let hostids = _.map(hosts, 'hostid');\r\n        return this.cachingProxy.getApps(hostids);\r\n      });\r\n    }\r\n\r\n    getApps(groupFilter, hostFilter, appFilter) {\r\n      return this.getHosts(groupFilter, hostFilter)\r\n      .then(hosts => {\r\n        let hostids = _.map(hosts, 'hostid');\r\n        if (appFilter) {\r\n          return this.cachingProxy.getApps(hostids)\r\n          .then(apps => filterByQuery(apps, appFilter));\r\n        } else {\r\n          return {\r\n            appFilterEmpty: true,\r\n            hostids: hostids\r\n          };\r\n        }\r\n      });\r\n    }\r\n\r\n    getAllItems(groupFilter, hostFilter, appFilter, options = {}) {\r\n      return this.getApps(groupFilter, hostFilter, appFilter)\r\n      .then(apps => {\r\n        if (apps.appFilterEmpty) {\r\n          return this.cachingProxy.getItems(apps.hostids, undefined, options.itemtype);\r\n        } else {\r\n          let appids = _.map(apps, 'applicationid');\r\n          return this.cachingProxy.getItems(undefined, appids, options.itemtype);\r\n        }\r\n      })\r\n      .then(items => {\r\n        if (!options.showDisabledItems) {\r\n          items = _.filter(items, {'status': '0'});\r\n        }\r\n\r\n        return items;\r\n      })\r\n      .then(this.expandUserMacro.bind(this));\r\n    }\r\n\r\n    expandUserMacro(items) {\r\n      let hostids = getHostIds(items);\r\n      return this.getMacros(hostids)\r\n      .then(macros => {\r\n        _.forEach(items, item => {\r\n          if (utils.containsMacro(item.name)) {\r\n            item.name = utils.replaceMacro(item, macros);\r\n          }\r\n        });\r\n        return items;\r\n      });\r\n    }\r\n\r\n    getItems(groupFilter, hostFilter, appFilter, itemFilter, options = {}) {\r\n      return this.getAllItems(groupFilter, hostFilter, appFilter, options)\r\n      .then(items => filterByQuery(items, itemFilter));\r\n    }\r\n\r\n    getITServices(itServiceFilter) {\r\n      return this.cachingProxy.getITServices()\r\n      .then(itServices => findByFilter(itServices, itServiceFilter));\r\n    }\r\n\r\n    /**\r\n     * Build query - convert target filters to array of Zabbix items\r\n     */\r\n    getTriggers(groupFilter, hostFilter, appFilter, options) {\r\n      let promises = [\r\n        this.getGroups(groupFilter),\r\n        this.getHosts(groupFilter, hostFilter),\r\n        this.getApps(groupFilter, hostFilter, appFilter)\r\n      ];\r\n\r\n      return Promise.all(promises)\r\n      .then(results => {\r\n        let filteredGroups = results[0];\r\n        let filteredHosts = results[1];\r\n        let filteredApps = results[2];\r\n        let query = {};\r\n\r\n        if (appFilter) {\r\n          query.applicationids = _.flatten(_.map(filteredApps, 'applicationid'));\r\n        }\r\n        if (hostFilter) {\r\n          query.hostids = _.map(filteredHosts, 'hostid');\r\n        }\r\n        if (groupFilter) {\r\n          query.groupids = _.map(filteredGroups, 'groupid');\r\n        }\r\n\r\n        return query;\r\n      }).then(query => {\r\n        return this.zabbixAPI.getTriggers(query.groupids, query.hostids, query.applicationids, options);\r\n      });\r\n    }\r\n  }\r\n\r\n  return Zabbix;\r\n}\r\n\r\nangular\r\n  .module('grafana.services')\r\n  .factory('Zabbix', ZabbixFactory);\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n/**\r\n * Find group, host, app or item by given name.\r\n * @param  list list of groups, apps or other\r\n * @param  name visible name\r\n * @return      array with finded element or empty array\r\n */\r\nfunction findByName(list, name) {\r\n  var finded = _.find(list, {'name': name});\r\n  if (finded) {\r\n    return [finded];\r\n  } else {\r\n    return [];\r\n  }\r\n}\r\n\r\n/**\r\n * Different hosts can contains applications and items with same name.\r\n * For this reason use _.filter, which return all elements instead _.find,\r\n * which return only first finded.\r\n * @param  {[type]} list list of elements\r\n * @param  {[type]} name app name\r\n * @return {[type]}      array with finded element or empty array\r\n */\r\nfunction filterByName(list, name) {\r\n  var finded = _.filter(list, {'name': name});\r\n  if (finded) {\r\n    return finded;\r\n  } else {\r\n    return [];\r\n  }\r\n}\r\n\r\nfunction filterByRegex(list, regex) {\r\n  var filterPattern = utils.buildRegex(regex);\r\n  return _.filter(list, function (zbx_obj) {\r\n    return filterPattern.test(zbx_obj.name);\r\n  });\r\n}\r\n\r\nfunction findByFilter(list, filter) {\r\n  if (utils.isRegex(filter)) {\r\n    return filterByRegex(list, filter);\r\n  } else {\r\n    return findByName(list, filter);\r\n  }\r\n}\r\n\r\nfunction findByGroupFilter(list, filter_list) {\r\n  var finded = _.filter(list, function (group) {\r\n    if (filter_list.indexOf(group.name) >= 0) {\r\n      return group;\r\n    }\r\n  });\r\n  if (finded) {\r\n    return finded;\r\n  } else {\r\n    return [];\r\n  }\r\n}\r\n\r\nfunction filterByQuery(list, filter) {\r\n  if (utils.isRegex(filter)) {\r\n    return filterByRegex(list, filter);\r\n  } else {\r\n    return filterByName(list, filter);\r\n  }\r\n}\r\n\r\nfunction getHostIds(items) {\r\n  let hostIds = _.map(items, item => {\r\n    return _.map(item.hosts, 'hostid');\r\n  });\r\n  return _.uniq(_.flatten(hostIds));\r\n}\r\n"]}
{"version":3,"sources":["../../src/datasource-zabbix/zabbixAPI.service.js"],"names":["ZabbixAPIServiceFactory","alertSrv","zabbixAPICoreService","ZabbixAPI","api_url","username","password","basicAuth","withCredentials","url","auth","requestOptions","loginPromise","loginErrorCount","maxLoginAttempts","zabbixAPICore","getTrend","getTrend_ZBXNEXT1193","method","params","request","catch","isNotAuthorized","error","data","loginOnce","then","message","statusText","alertAPIError","timeout","set","Promise","resolve","login","getVersion","eventid","eventids","output","sortfield","real_hosts","groupids","selectParentTemplates","hostids","appids","itemtype","webitems","filter","selectHosts","applicationids","value_type","utils","expandItems","itemids","globalmacro","itemid","items","length","lastvalue","timeFrom","timeTill","grouped_items","_","groupBy","promises","map","history","sortorder","time_from","time_till","all","flatten","trend","self","serviceids","timeRange","timeTo","intervals","from","to","options","showTriggers","maintenance","expandDescription","expandData","expandComment","monitored","skipDependent","value","selectGroups","selectItems","selectLastEvent","selectTags","lastChangeSince","lastChangeTill","objectids","showEvents","select_acknowledges","preservekeys","events","event","acknowledges","minSeverity","acknowledged","count","min_severity","countOutput","triggers","filterTriggersByAcknowledge","trigger","lastEvent","angular","module","factory"],"mappings":"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","file":"zabbixAPI.service.js","sourcesContent":["import angular from 'angular';\r\nimport _ from 'lodash';\r\nimport * as utils from './utils';\r\nimport './zabbixAPICore.service';\r\n\r\n/** @ngInject */\r\nfunction ZabbixAPIServiceFactory(alertSrv, zabbixAPICoreService) {\r\n\r\n  /**\r\n   * Zabbix API Wrapper.\r\n   * Creates Zabbix API instance with given parameters (url, credentials and other).\r\n   * Wraps API calls and provides high-level methods.\r\n   */\r\n  class ZabbixAPI {\r\n\r\n    constructor(api_url, username, password, basicAuth, withCredentials) {\r\n      this.url              = api_url;\r\n      this.username         = username;\r\n      this.password         = password;\r\n      this.auth             = \"\";\r\n\r\n      this.requestOptions = {\r\n        basicAuth: basicAuth,\r\n        withCredentials: withCredentials\r\n      };\r\n\r\n      this.loginPromise = null;\r\n      this.loginErrorCount = 0;\r\n      this.maxLoginAttempts = 3;\r\n\r\n      this.alertSrv = alertSrv;\r\n      this.zabbixAPICore = zabbixAPICoreService;\r\n\r\n      this.getTrend = this.getTrend_ZBXNEXT1193;\r\n      //getTrend = getTrend_30;\r\n    }\r\n\r\n    //////////////////////////\r\n    // Core method wrappers //\r\n    //////////////////////////\r\n\r\n    request(method, params) {\r\n      return this.zabbixAPICore.request(this.url, method, params, this.requestOptions, this.auth)\r\n      .catch(error => {\r\n        if (isNotAuthorized(error.data)) {\r\n          // Handle auth errors\r\n          this.loginErrorCount++;\r\n          if (this.loginErrorCount > this.maxLoginAttempts) {\r\n            this.loginErrorCount = 0;\r\n            return null;\r\n          } else {\r\n            return this.loginOnce()\r\n            .then(() => this.request(method, params));\r\n          }\r\n        } else {\r\n          // Handle API errors\r\n          let message = error.data ? error.data : error.statusText;\r\n          this.alertAPIError(message);\r\n        }\r\n      });\r\n    }\r\n\r\n    alertAPIError(message, timeout = 5000) {\r\n      this.alertSrv.set(\r\n        \"Zabbix API Error\",\r\n        message,\r\n        'error',\r\n        timeout\r\n      );\r\n    }\r\n\r\n    /**\r\n     * When API unauthenticated or auth token expired each request produce login()\r\n     * call. But auth token is common to all requests. This function wraps login() method\r\n     * and call it once. If login() already called just wait for it (return its promise).\r\n     * @return login promise\r\n     */\r\n    loginOnce() {\r\n      if (!this.loginPromise) {\r\n        this.loginPromise = Promise.resolve(\r\n          this.login().then(auth => {\r\n            this.auth = auth;\r\n            this.loginPromise = null;\r\n            return auth;\r\n          })\r\n        );\r\n      }\r\n      return this.loginPromise;\r\n    }\r\n\r\n    /**\r\n     * Get authentication token.\r\n     */\r\n    login() {\r\n      return this.zabbixAPICore.login(this.url, this.username, this.password, this.requestOptions);\r\n    }\r\n\r\n    /**\r\n     * Get Zabbix API version\r\n     */\r\n    getVersion() {\r\n      return this.zabbixAPICore.getVersion(this.url, this.requestOptions);\r\n    }\r\n\r\n    ////////////////////////////////\r\n    // Zabbix API method wrappers //\r\n    ////////////////////////////////\r\n\r\n    acknowledgeEvent(eventid, message) {\r\n      var params = {\r\n        eventids: eventid,\r\n        message: message\r\n      };\r\n\r\n      return this.request('event.acknowledge', params);\r\n    }\r\n\r\n    getGroups() {\r\n      var params = {\r\n        output: ['name'],\r\n        sortfield: 'name',\r\n        real_hosts: true\r\n      };\r\n\r\n      return this.request('hostgroup.get', params);\r\n    }\r\n\r\n    getHosts(groupids) {\r\n      var params = {\r\n        output: ['name', 'host'],\r\n        sortfield: 'name',\r\n        selectParentTemplates: [\r\n          \"templateid\"\r\n        ],\r\n      };\r\n      if (groupids) {\r\n        params.groupids = groupids;\r\n      }\r\n\r\n      return this.request('host.get', params);\r\n    }\r\n\r\n    getApps(hostids) {\r\n      var params = {\r\n        output: 'extend',\r\n        hostids: hostids\r\n      };\r\n\r\n      return this.request('application.get', params);\r\n    }\r\n\r\n    /**\r\n     * Get Zabbix items\r\n     * @param  {[type]} hostids  host ids\r\n     * @param  {[type]} appids   application ids\r\n     * @param  {String} itemtype 'num' or 'text'\r\n     * @return {[type]}          array of items\r\n     */\r\n    getItems(hostids, appids, itemtype) {\r\n      var params = {\r\n        output: [\r\n          'name', 'key_',\r\n          'value_type',\r\n          'hostid',\r\n          'status',\r\n          'state'\r\n        ],\r\n        sortfield: 'name',\r\n        webitems: true,\r\n        filter: {},\r\n        selectHosts: ['hostid', 'name']\r\n      };\r\n      if (hostids) {\r\n        params.hostids = hostids;\r\n      }\r\n      if (appids) {\r\n        params.applicationids = appids;\r\n      }\r\n      if (itemtype === 'num') {\r\n        // Return only numeric metrics\r\n        params.filter.value_type = [0, 3];\r\n      }\r\n      if (itemtype === 'text') {\r\n        // Return only text metrics\r\n        params.filter.value_type = [1, 2, 4];\r\n      }\r\n\r\n      return this.request('item.get', params)\r\n      .then(utils.expandItems);\r\n    }\r\n\r\n    getItemsByIDs(itemids) {\r\n      var params = {\r\n        itemids: itemids,\r\n        output: [\r\n          'name', 'key_',\r\n          'value_type',\r\n          'hostid',\r\n          'status',\r\n          'state'\r\n        ],\r\n        webitems: true,\r\n        selectHosts: ['hostid', 'name']\r\n      };\r\n\r\n      return this.request('item.get', params)\r\n      .then(utils.expandItems);\r\n    }\r\n\r\n    getMacros(hostids) {\r\n      var params = {\r\n        output: 'extend',\r\n        hostids: hostids\r\n      };\r\n\r\n      return this.request('usermacro.get', params);\r\n    }\r\n\r\n    getGlobalMacros() {\r\n      var params = {\r\n        output: 'extend',\r\n        globalmacro: true\r\n      };\r\n\r\n      return this.request('usermacro.get', params);\r\n    }\r\n\r\n    getLastValue(itemid) {\r\n      var params = {\r\n        output: ['lastvalue'],\r\n        itemids: itemid\r\n      };\r\n      return this.request('item.get', params)\r\n      .then(items => items.length ? items[0].lastvalue : null);\r\n    }\r\n\r\n    /**\r\n     * Perform history query from Zabbix API\r\n     *\r\n     * @param  {Array}  items       Array of Zabbix item objects\r\n     * @param  {Number} timeFrom   Time in seconds\r\n     * @param  {Number} timeTill   Time in seconds\r\n     * @return {Array}  Array of Zabbix history objects\r\n     */\r\n    getHistory(items, timeFrom, timeTill) {\r\n\r\n      // Group items by value type and perform request for each value type\r\n      let grouped_items = _.groupBy(items, 'value_type');\r\n      let promises = _.map(grouped_items, (items, value_type) => {\r\n        let itemids = _.map(items, 'itemid');\r\n        let params = {\r\n          output: 'extend',\r\n          history: value_type,\r\n          itemids: itemids,\r\n          sortfield: 'clock',\r\n          sortorder: 'ASC',\r\n          time_from: timeFrom\r\n        };\r\n\r\n        // Relative queries (e.g. last hour) don't include an end time\r\n        if (timeTill) {\r\n          params.time_till = timeTill;\r\n        }\r\n\r\n        return this.request('history.get', params);\r\n      });\r\n\r\n      return Promise.all(promises).then(_.flatten);\r\n    }\r\n\r\n    /**\r\n     * Perform trends query from Zabbix API\r\n     * Use trends api extension from ZBXNEXT-1193 patch.\r\n     *\r\n     * @param  {Array}  items       Array of Zabbix item objects\r\n     * @param  {Number} time_from   Time in seconds\r\n     * @param  {Number} time_till   Time in seconds\r\n     * @return {Array}  Array of Zabbix trend objects\r\n     */\r\n    getTrend_ZBXNEXT1193(items, timeFrom, timeTill) {\r\n\r\n      // Group items by value type and perform request for each value type\r\n      let grouped_items = _.groupBy(items, 'value_type');\r\n      let promises = _.map(grouped_items, (items, value_type) => {\r\n        let itemids = _.map(items, 'itemid');\r\n        let params = {\r\n          output: 'extend',\r\n          trend: value_type,\r\n          itemids: itemids,\r\n          sortfield: 'clock',\r\n          sortorder: 'ASC',\r\n          time_from: timeFrom\r\n        };\r\n\r\n        // Relative queries (e.g. last hour) don't include an end time\r\n        if (timeTill) {\r\n          params.time_till = timeTill;\r\n        }\r\n\r\n        return this.request('trend.get', params);\r\n      });\r\n\r\n      return Promise.all(promises).then(_.flatten);\r\n    }\r\n\r\n    getTrend_30(items, time_from, time_till, value_type) {\r\n      var self = this;\r\n      var itemids = _.map(items, 'itemid');\r\n\r\n      var params = {\r\n        output: [\"itemid\",\r\n          \"clock\",\r\n          value_type\r\n        ],\r\n        itemids: itemids,\r\n        time_from: time_from\r\n      };\r\n\r\n      // Relative queries (e.g. last hour) don't include an end time\r\n      if (time_till) {\r\n        params.time_till = time_till;\r\n      }\r\n\r\n      return self.request('trend.get', params);\r\n    }\r\n\r\n    getITService(serviceids) {\r\n      var params = {\r\n        output: 'extend',\r\n        serviceids: serviceids\r\n      };\r\n      return this.request('service.get', params);\r\n    }\r\n\r\n    getSLA(serviceids, timeRange) {\r\n      let [timeFrom, timeTo] = timeRange;\r\n      var params = {\r\n        serviceids: serviceids,\r\n        intervals: [{\r\n          from: timeFrom,\r\n          to: timeTo\r\n        }]\r\n      };\r\n      return this.request('service.getsla', params);\r\n    }\r\n\r\n    getTriggers(groupids, hostids, applicationids, options) {\r\n      let {showTriggers, maintenance, timeFrom, timeTo} = options;\r\n\r\n      let params = {\r\n        output: 'extend',\r\n        groupids: groupids,\r\n        hostids: hostids,\r\n        applicationids: applicationids,\r\n        expandDescription: true,\r\n        expandData: true,\r\n        expandComment: true,\r\n        monitored: true,\r\n        skipDependent: true,\r\n        //only_true: true,\r\n        filter: {\r\n          value: 1\r\n        },\r\n        selectGroups: ['name'],\r\n        selectHosts: ['name', 'host', 'maintenance_status'],\r\n        selectItems: ['name', 'key_', 'lastvalue'],\r\n        selectLastEvent: 'extend',\r\n        selectTags: 'extend'\r\n      };\r\n\r\n      if (showTriggers) {\r\n        params.filter.value = showTriggers;\r\n      }\r\n\r\n      if (maintenance) {\r\n        params.maintenance = true;\r\n      }\r\n\r\n      if (timeFrom || timeTo) {\r\n        params.lastChangeSince = timeFrom;\r\n        params.lastChangeTill = timeTo;\r\n      }\r\n\r\n      return this.request('trigger.get', params);\r\n    }\r\n\r\n    getEvents(objectids, timeFrom, timeTo, showEvents) {\r\n      var params = {\r\n        output: 'extend',\r\n        time_from: timeFrom,\r\n        time_till: timeTo,\r\n        objectids: objectids,\r\n        select_acknowledges: 'extend',\r\n        selectHosts: 'extend',\r\n        value: showEvents\r\n      };\r\n\r\n      return this.request('event.get', params);\r\n    }\r\n\r\n    getAcknowledges(eventids) {\r\n      var params = {\r\n        output: 'extend',\r\n        eventids: eventids,\r\n        preservekeys: true,\r\n        select_acknowledges: 'extend',\r\n        sortfield: 'clock',\r\n        sortorder: 'DESC'\r\n      };\r\n\r\n      return this.request('event.get', params)\r\n      .then(events => {\r\n        return _.filter(events, (event) => event.acknowledges.length);\r\n      });\r\n    }\r\n\r\n    getAlerts(itemids, timeFrom, timeTo) {\r\n      var params = {\r\n        output: 'extend',\r\n        itemids: itemids,\r\n        expandDescription: true,\r\n        expandData: true,\r\n        expandComment: true,\r\n        monitored: true,\r\n        skipDependent: true,\r\n        //only_true: true,\r\n        // filter: {\r\n        //   value: 1\r\n        // },\r\n        selectLastEvent: 'extend'\r\n      };\r\n\r\n      if (timeFrom || timeTo) {\r\n        params.lastChangeSince = timeFrom;\r\n        params.lastChangeTill = timeTo;\r\n      }\r\n\r\n      return this.request('trigger.get', params);\r\n    }\r\n\r\n    getHostAlerts(hostids, applicationids, options) {\r\n      let {minSeverity, acknowledged, count, timeFrom, timeTo} = options;\r\n      let params = {\r\n        output: 'extend',\r\n        hostids: hostids,\r\n        min_severity: minSeverity,\r\n        filter: { value: 1 },\r\n        expandDescription: true,\r\n        expandData: true,\r\n        expandComment: true,\r\n        monitored: true,\r\n        skipDependent: true,\r\n        selectLastEvent: 'extend',\r\n        selectGroups: 'extend',\r\n        selectHosts: ['host', 'name']\r\n      };\r\n\r\n      if (count && acknowledged !== 0 && acknowledged !== 1) {\r\n        params.countOutput = true;\r\n      }\r\n\r\n      if (applicationids && applicationids.length) {\r\n        params.applicationids = applicationids;\r\n      }\r\n\r\n      if (timeFrom || timeTo) {\r\n        params.lastChangeSince = timeFrom;\r\n        params.lastChangeTill = timeTo;\r\n      }\r\n\r\n      return this.request('trigger.get', params)\r\n      .then((triggers) => {\r\n        if (!count || acknowledged === 0 || acknowledged === 1) {\r\n          triggers = filterTriggersByAcknowledge(triggers, acknowledged);\r\n          if (count) {\r\n            triggers = triggers.length;\r\n          }\r\n        }\r\n        return triggers;\r\n      });\r\n    }\r\n  }\r\n\r\n  return ZabbixAPI;\r\n}\r\n\r\nfunction filterTriggersByAcknowledge(triggers, acknowledged) {\r\n  if (acknowledged === 0) {\r\n    return _.filter(triggers, (trigger) => trigger.lastEvent.acknowledged === \"0\");\r\n  } else if (acknowledged === 1) {\r\n    return _.filter(triggers, (trigger) => trigger.lastEvent.acknowledged === \"1\");\r\n  } else {\r\n    return triggers;\r\n  }\r\n}\r\n\r\nfunction isNotAuthorized(message) {\r\n  return (\r\n    message === \"Session terminated, re-login, please.\" ||\r\n    message === \"Not authorised.\" ||\r\n    message === \"Not authorized.\"\r\n  );\r\n}\r\n\r\nangular\r\n  .module('grafana.services')\r\n  .factory('zabbixAPIService', ZabbixAPIServiceFactory);\r\n"]}